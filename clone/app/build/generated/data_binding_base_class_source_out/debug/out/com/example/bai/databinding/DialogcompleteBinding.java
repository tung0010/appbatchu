// Generated by view binder compiler. Do not edit!
package com.example.bai.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.bai.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogcompleteBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final FrameLayout frameHeader;

  @NonNull
  public final FrameLayout frameModal;

  @NonNull
  public final FrameLayout frameOkbtn;

  @NonNull
  public final FrameLayout frameStack;

  @NonNull
  public final FrameLayout frameStackgroupfortyfour;

  @NonNull
  public final FrameLayout frameStackribbon;

  @NonNull
  public final FrameLayout frameStackunion;

  @NonNull
  public final FrameLayout frameStackunionOne;

  @NonNull
  public final FrameLayout frameStackunionTwo;

  @NonNull
  public final ImageView imageCoinimg;

  @NonNull
  public final ImageView imageGroupFortyFour;

  @NonNull
  public final ImageView imageRibbon;

  @NonNull
  public final ImageView imageUnion;

  @NonNull
  public final ImageView imageUnionOne;

  @NonNull
  public final ImageView imageUnionTwo;

  @NonNull
  public final ImageView imageVectorNine;

  @NonNull
  public final LinearLayout linearColumnreward;

  @NonNull
  public final LinearLayout linearColumnscore;

  @NonNull
  public final LinearLayout linearRowcoinimg;

  @NonNull
  public final LinearLayout linearSix;

  @NonNull
  public final LinearLayout linearTitle;

  @NonNull
  public final TextView score;

  @NonNull
  public final TextView txtComplete;

  @NonNull
  public final TextView txtLanguageOne;

  @NonNull
  public final TextView txtLevelCounter;

  @NonNull
  public final TextView txtReward;

  @NonNull
  public final TextView txtScore;

  @NonNull
  public final TextView txtdapan;

  private DialogcompleteBinding(@NonNull LinearLayout rootView, @NonNull FrameLayout frameHeader,
      @NonNull FrameLayout frameModal, @NonNull FrameLayout frameOkbtn,
      @NonNull FrameLayout frameStack, @NonNull FrameLayout frameStackgroupfortyfour,
      @NonNull FrameLayout frameStackribbon, @NonNull FrameLayout frameStackunion,
      @NonNull FrameLayout frameStackunionOne, @NonNull FrameLayout frameStackunionTwo,
      @NonNull ImageView imageCoinimg, @NonNull ImageView imageGroupFortyFour,
      @NonNull ImageView imageRibbon, @NonNull ImageView imageUnion,
      @NonNull ImageView imageUnionOne, @NonNull ImageView imageUnionTwo,
      @NonNull ImageView imageVectorNine, @NonNull LinearLayout linearColumnreward,
      @NonNull LinearLayout linearColumnscore, @NonNull LinearLayout linearRowcoinimg,
      @NonNull LinearLayout linearSix, @NonNull LinearLayout linearTitle, @NonNull TextView score,
      @NonNull TextView txtComplete, @NonNull TextView txtLanguageOne,
      @NonNull TextView txtLevelCounter, @NonNull TextView txtReward, @NonNull TextView txtScore,
      @NonNull TextView txtdapan) {
    this.rootView = rootView;
    this.frameHeader = frameHeader;
    this.frameModal = frameModal;
    this.frameOkbtn = frameOkbtn;
    this.frameStack = frameStack;
    this.frameStackgroupfortyfour = frameStackgroupfortyfour;
    this.frameStackribbon = frameStackribbon;
    this.frameStackunion = frameStackunion;
    this.frameStackunionOne = frameStackunionOne;
    this.frameStackunionTwo = frameStackunionTwo;
    this.imageCoinimg = imageCoinimg;
    this.imageGroupFortyFour = imageGroupFortyFour;
    this.imageRibbon = imageRibbon;
    this.imageUnion = imageUnion;
    this.imageUnionOne = imageUnionOne;
    this.imageUnionTwo = imageUnionTwo;
    this.imageVectorNine = imageVectorNine;
    this.linearColumnreward = linearColumnreward;
    this.linearColumnscore = linearColumnscore;
    this.linearRowcoinimg = linearRowcoinimg;
    this.linearSix = linearSix;
    this.linearTitle = linearTitle;
    this.score = score;
    this.txtComplete = txtComplete;
    this.txtLanguageOne = txtLanguageOne;
    this.txtLevelCounter = txtLevelCounter;
    this.txtReward = txtReward;
    this.txtScore = txtScore;
    this.txtdapan = txtdapan;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogcompleteBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogcompleteBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialogcomplete, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogcompleteBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.frameHeader;
      FrameLayout frameHeader = ViewBindings.findChildViewById(rootView, id);
      if (frameHeader == null) {
        break missingId;
      }

      id = R.id.frameModal;
      FrameLayout frameModal = ViewBindings.findChildViewById(rootView, id);
      if (frameModal == null) {
        break missingId;
      }

      id = R.id.frameOkbtn;
      FrameLayout frameOkbtn = ViewBindings.findChildViewById(rootView, id);
      if (frameOkbtn == null) {
        break missingId;
      }

      id = R.id.frameStack;
      FrameLayout frameStack = ViewBindings.findChildViewById(rootView, id);
      if (frameStack == null) {
        break missingId;
      }

      id = R.id.frameStackgroupfortyfour;
      FrameLayout frameStackgroupfortyfour = ViewBindings.findChildViewById(rootView, id);
      if (frameStackgroupfortyfour == null) {
        break missingId;
      }

      id = R.id.frameStackribbon;
      FrameLayout frameStackribbon = ViewBindings.findChildViewById(rootView, id);
      if (frameStackribbon == null) {
        break missingId;
      }

      id = R.id.frameStackunion;
      FrameLayout frameStackunion = ViewBindings.findChildViewById(rootView, id);
      if (frameStackunion == null) {
        break missingId;
      }

      id = R.id.frameStackunionOne;
      FrameLayout frameStackunionOne = ViewBindings.findChildViewById(rootView, id);
      if (frameStackunionOne == null) {
        break missingId;
      }

      id = R.id.frameStackunionTwo;
      FrameLayout frameStackunionTwo = ViewBindings.findChildViewById(rootView, id);
      if (frameStackunionTwo == null) {
        break missingId;
      }

      id = R.id.imageCoinimg;
      ImageView imageCoinimg = ViewBindings.findChildViewById(rootView, id);
      if (imageCoinimg == null) {
        break missingId;
      }

      id = R.id.imageGroupFortyFour;
      ImageView imageGroupFortyFour = ViewBindings.findChildViewById(rootView, id);
      if (imageGroupFortyFour == null) {
        break missingId;
      }

      id = R.id.imageRibbon;
      ImageView imageRibbon = ViewBindings.findChildViewById(rootView, id);
      if (imageRibbon == null) {
        break missingId;
      }

      id = R.id.imageUnion;
      ImageView imageUnion = ViewBindings.findChildViewById(rootView, id);
      if (imageUnion == null) {
        break missingId;
      }

      id = R.id.imageUnionOne;
      ImageView imageUnionOne = ViewBindings.findChildViewById(rootView, id);
      if (imageUnionOne == null) {
        break missingId;
      }

      id = R.id.imageUnionTwo;
      ImageView imageUnionTwo = ViewBindings.findChildViewById(rootView, id);
      if (imageUnionTwo == null) {
        break missingId;
      }

      id = R.id.imageVectorNine;
      ImageView imageVectorNine = ViewBindings.findChildViewById(rootView, id);
      if (imageVectorNine == null) {
        break missingId;
      }

      id = R.id.linearColumnreward;
      LinearLayout linearColumnreward = ViewBindings.findChildViewById(rootView, id);
      if (linearColumnreward == null) {
        break missingId;
      }

      id = R.id.linearColumnscore;
      LinearLayout linearColumnscore = ViewBindings.findChildViewById(rootView, id);
      if (linearColumnscore == null) {
        break missingId;
      }

      id = R.id.linearRowcoinimg;
      LinearLayout linearRowcoinimg = ViewBindings.findChildViewById(rootView, id);
      if (linearRowcoinimg == null) {
        break missingId;
      }

      LinearLayout linearSix = (LinearLayout) rootView;

      id = R.id.linearTitle;
      LinearLayout linearTitle = ViewBindings.findChildViewById(rootView, id);
      if (linearTitle == null) {
        break missingId;
      }

      id = R.id.score;
      TextView score = ViewBindings.findChildViewById(rootView, id);
      if (score == null) {
        break missingId;
      }

      id = R.id.txtComplete;
      TextView txtComplete = ViewBindings.findChildViewById(rootView, id);
      if (txtComplete == null) {
        break missingId;
      }

      id = R.id.txtLanguageOne;
      TextView txtLanguageOne = ViewBindings.findChildViewById(rootView, id);
      if (txtLanguageOne == null) {
        break missingId;
      }

      id = R.id.txtLevelCounter;
      TextView txtLevelCounter = ViewBindings.findChildViewById(rootView, id);
      if (txtLevelCounter == null) {
        break missingId;
      }

      id = R.id.txtReward;
      TextView txtReward = ViewBindings.findChildViewById(rootView, id);
      if (txtReward == null) {
        break missingId;
      }

      id = R.id.txtScore;
      TextView txtScore = ViewBindings.findChildViewById(rootView, id);
      if (txtScore == null) {
        break missingId;
      }

      id = R.id.txtdapan;
      TextView txtdapan = ViewBindings.findChildViewById(rootView, id);
      if (txtdapan == null) {
        break missingId;
      }

      return new DialogcompleteBinding((LinearLayout) rootView, frameHeader, frameModal, frameOkbtn,
          frameStack, frameStackgroupfortyfour, frameStackribbon, frameStackunion,
          frameStackunionOne, frameStackunionTwo, imageCoinimg, imageGroupFortyFour, imageRibbon,
          imageUnion, imageUnionOne, imageUnionTwo, imageVectorNine, linearColumnreward,
          linearColumnscore, linearRowcoinimg, linearSix, linearTitle, score, txtComplete,
          txtLanguageOne, txtLevelCounter, txtReward, txtScore, txtdapan);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
