// Generated by view binder compiler. Do not edit!
package com.example.bai.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.utils.widget.ImageFilterButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.bai.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import pl.droidsonroids.gif.GifImageView;

public final class PlayscreenBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageFilterButton back;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final ConstraintLayout header;

  @NonNull
  public final ImageFilterButton iconruby;

  @NonNull
  public final GifImageView imagegame;

  @NonNull
  public final ImageView index;

  @NonNull
  public final RecyclerView rcvinputkeyword;

  @NonNull
  public final RecyclerView rcvkeyword;

  @NonNull
  public final TextView ruby;

  @NonNull
  public final TextView score;

  @NonNull
  public final ImageFilterButton suggest;

  private PlayscreenBinding(@NonNull RelativeLayout rootView, @NonNull ImageFilterButton back,
      @NonNull ConstraintLayout constraintLayout, @NonNull ConstraintLayout header,
      @NonNull ImageFilterButton iconruby, @NonNull GifImageView imagegame,
      @NonNull ImageView index, @NonNull RecyclerView rcvinputkeyword,
      @NonNull RecyclerView rcvkeyword, @NonNull TextView ruby, @NonNull TextView score,
      @NonNull ImageFilterButton suggest) {
    this.rootView = rootView;
    this.back = back;
    this.constraintLayout = constraintLayout;
    this.header = header;
    this.iconruby = iconruby;
    this.imagegame = imagegame;
    this.index = index;
    this.rcvinputkeyword = rcvinputkeyword;
    this.rcvkeyword = rcvkeyword;
    this.ruby = ruby;
    this.score = score;
    this.suggest = suggest;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PlayscreenBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PlayscreenBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.playscreen, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PlayscreenBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back;
      ImageFilterButton back = ViewBindings.findChildViewById(rootView, id);
      if (back == null) {
        break missingId;
      }

      id = R.id.constraintLayout;
      ConstraintLayout constraintLayout = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout == null) {
        break missingId;
      }

      id = R.id.header;
      ConstraintLayout header = ViewBindings.findChildViewById(rootView, id);
      if (header == null) {
        break missingId;
      }

      id = R.id.iconruby;
      ImageFilterButton iconruby = ViewBindings.findChildViewById(rootView, id);
      if (iconruby == null) {
        break missingId;
      }

      id = R.id.imagegame;
      GifImageView imagegame = ViewBindings.findChildViewById(rootView, id);
      if (imagegame == null) {
        break missingId;
      }

      id = R.id.index;
      ImageView index = ViewBindings.findChildViewById(rootView, id);
      if (index == null) {
        break missingId;
      }

      id = R.id.rcvinputkeyword;
      RecyclerView rcvinputkeyword = ViewBindings.findChildViewById(rootView, id);
      if (rcvinputkeyword == null) {
        break missingId;
      }

      id = R.id.rcvkeyword;
      RecyclerView rcvkeyword = ViewBindings.findChildViewById(rootView, id);
      if (rcvkeyword == null) {
        break missingId;
      }

      id = R.id.ruby;
      TextView ruby = ViewBindings.findChildViewById(rootView, id);
      if (ruby == null) {
        break missingId;
      }

      id = R.id.score;
      TextView score = ViewBindings.findChildViewById(rootView, id);
      if (score == null) {
        break missingId;
      }

      id = R.id.suggest;
      ImageFilterButton suggest = ViewBindings.findChildViewById(rootView, id);
      if (suggest == null) {
        break missingId;
      }

      return new PlayscreenBinding((RelativeLayout) rootView, back, constraintLayout, header,
          iconruby, imagegame, index, rcvinputkeyword, rcvkeyword, ruby, score, suggest);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
